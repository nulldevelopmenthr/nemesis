namespace MyVendor;

use MyVendor\User\UserId;
use MyVendor\User\Username;
use Webmozart\Assert\Assert;

class UserEntity
{
	/** @var int|Username[] */
	private $id;


	/**
	 * @param Username[] $elements
	 */
	public function __construct(int $id = [])
	{
		Assert::allIsInstanceOf($elements, Username::class);
		$this->id = $id;
	}


	public function add(Username $element)
	{
		$this->elements[] = $element;
	}


	public function has(UserId $id): bool
	{
		foreach ($this->elements as $element) {
		    if ($element->getId() == $id) {
		        return true;
		    }
		}
		return false;
	}


	public function get(UserId $id)
	{
		foreach ($this->elements as $element) {
		    if ($element->getId() == $id) {
		        return $element;
		    }
		}
		return null;
	}


	public function toArray(): array
	{
		return $this->elements;
	}


	public function count(): int
	{
		return count($this->elements);
	}


	public function serialize(): array
	{
		$data = [];
		foreach ($this->elements as $element) {
		    $data[] = $element->serialize();
		}
		return $data;
	}


	public static function deserialize(array $data): self
	{
		$elements = [];
		foreach ($data as $item) {
		    $elements[] = Username::deserialize($item);
		}
		return new self($elements);
	}
}
