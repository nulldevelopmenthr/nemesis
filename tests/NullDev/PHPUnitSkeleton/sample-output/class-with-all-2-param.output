<?php

namespace tests\Developer;

use Developer\Senior;
use FirstName;
use LastName;
use Mockery;
use Mockery\Adapter\Phpunit\MockeryPHPUnitIntegration;
use Mockery\MockInterface;
use PHPUnit\Framework\TestCase;
/**
* @covers \Developer\Senior
* @group todo
*/
class SeniorTest extends TestCase
{
    use MockeryPHPUnitIntegration;
    /** @var MockInterface|FirstName */
    private $firstName;
    /** @var MockInterface|LastName */
    private $lastName;
    /** @var Senior */
    private $sut;
    public function setUp()
    {
        $this->firstName = Mockery::mock(FirstName::class);
        $this->lastName = Mockery::mock(LastName::class);
        $this->sut = new Senior($this->firstName, $this->lastName);
    }
    public function testGetFirstName()
    {
        self::assertEquals($this->firstName, $this->sut->getFirstName());
    }
    public function testGetLastName()
    {
        self::assertEquals($this->lastName, $this->sut->getLastName());
    }
}