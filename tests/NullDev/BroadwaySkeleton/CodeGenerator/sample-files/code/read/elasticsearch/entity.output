<?php

namespace MyShop\ReadModel\Product;

use Broadway\ReadModel\Identifiable;
use Broadway\Serializer\Serializable;
use DateTime;
use Ramsey\Uuid\Uuid;
class ProductReadEntity implements Identifiable, Serializable
{
    /** @var Uuid */
    private $productId;
    /** @var string */
    private $title;
    /** @var int */
    private $quantity;
    /** @var array */
    private $locationsAvailable;
    /** @var DateTime */
    private $createdAt;
    public function __construct(Uuid $productId, string $title, int $quantity, array $locationsAvailable, DateTime $createdAt)
    {
        $this->productId = $productId;
        $this->title = $title;
        $this->quantity = $quantity;
        $this->locationsAvailable = $locationsAvailable;
        $this->createdAt = $createdAt;
    }
    public function getProductId() : Uuid
    {
        return $this->productId;
    }
    public function getTitle() : string
    {
        return $this->title;
    }
    public function getQuantity() : int
    {
        return $this->quantity;
    }
    public function getLocationsAvailable() : array
    {
        return $this->locationsAvailable;
    }
    public function getCreatedAt() : DateTime
    {
        return $this->createdAt;
    }
    public function serialize() : array
    {
        return ['productId' => (string) $this->productId, 'title' => $this->title, 'quantity' => $this->quantity, 'locationsAvailable' => $this->locationsAvailable, 'createdAt' => $this->createdAt->format('c')];
    }
    public static function deserialize(array $data) : ProductReadEntity
    {
        return new self(new Uuid($data['productId']), $data['title'], $data['quantity'], $data['locationsAvailable'], new DateTime($data['createdAt']));
    }
    public function getId() : string
    {
        return (string) $this->productId;
    }
}