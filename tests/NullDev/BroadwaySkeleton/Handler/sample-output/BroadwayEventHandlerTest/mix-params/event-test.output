<?php

namespace tests\Something;

use Mockery;
use Mockery\Adapter\Phpunit\MockeryPHPUnitIntegration;
use Mockery\MockInterface;
use PHPUnit\Framework\TestCase;
use Something\Company;
use Something\UserCreated;

/**
 * @covers \Something\UserCreated
 * @group todo
 */
class UserCreatedTest extends TestCase
{
    use MockeryPHPUnitIntegration;
    /** @var string */
    private $name;
    /** @var int */
    private $age;
    /** @var float */
    private $height;
    /** @var  */
    private $about;
    /** @var MockInterface|Company */
    private $company;
    /** @var UserCreated */
    private $sut;

    public function setUp()
    {
        $this->name    = 'name';
        $this->age     = 1;
        $this->height  = 2.0;
        $this->about   = 'about';
        $this->company = Mockery::mock(Company::class);
        $this->sut     = new UserCreated($this->name, $this->age, $this->height, $this->about, $this->company);
    }

    public function testGetName()
    {
        self::assertEquals($this->name, $this->sut->getName());
    }

    public function testGetAge()
    {
        self::assertEquals($this->age, $this->sut->getAge());
    }

    public function testGetHeight()
    {
        self::assertEquals($this->height, $this->sut->getHeight());
    }

    public function testGetAbout()
    {
        self::assertEquals($this->about, $this->sut->getAbout());
    }

    public function testGetCompany()
    {
        self::assertEquals($this->company, $this->sut->getCompany());
    }
}
